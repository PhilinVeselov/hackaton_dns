from flask import Flask, render_template, request
import psycopg2
from yandex_cloud_ml_sdk import YCloudML
from flask_cors import CORS  

app = Flask(__name__)
CORS(app)  

sdk = YCloudML(folder_id="СЕКРЕТ", auth="СЕКРЕТ")
model = sdk.models.completions("yandexgpt")
model = model.configure(temperature=0.5)

def get_matching_categories(query, categories):
    query_lower = query.lower()
    matching_categories = []
    for category, keywords in categories.items():
        if any(keyword in query_lower for keyword in keywords):
            matching_categories.append(category)
    return matching_categories

def get_db_connection():
    conn = psycopg2.connect(
        dbname="postgres",
        user="postgres",
        password="",
        host="localhost",
        port="5432"
    )
    return conn

@app.route("/api/products", methods=["GET"])
def api_products():
    query = request.args.get("query", "").strip()  
    if not query:
        return {"error": "Query parameter 'query' is required"}, 400

    categories_prompt = f"{query}. Какие категории товара более всего подходят под это? в выборе категорий учитывай те, что подходят на 80%. Вот категории: Процессоры, Материнские платы, Видеокарты, Оперативная память DIMM, Оперативная память SO-DIMM, Корпуса, Блоки питания, Кулеры для процессоров, Системы жидкостного охлаждения, Вентиляторы для корпуса, Твердотельные накопители SSD, Мониторы, Лазерные МФУ, Струйные МФУ, Лазерные принтеры, Струйные принтеры, 3D принтеры, Стулья, Столы, Проекторы, Wi-Fi роутеры, Электросамокаты, Варочные панели электрические, Варочные панели индукционные, Варочные панели газовые, Варочные панели комбинированные, Духовые шкафы электрические, Духовые шкафы газовые, Вытяжки, Полновстраиваемые вытяжки, Телескопические вытяжки, Каминные вытяжки, Наклонные вытяжки, Подвесные вытяжки, Встраиваемые микроволновые печи, Встраиваемые холодильники, Встраиваемые морозильные шкафы, Встраиваемые посудомоечные машины, Встраиваемые стиральные машины, Встраиваемые винные шкафы, Встраиваемые кофемашины, Встраиваемые пароварки, Встраиваемые вакуумизаторы, Плиты электрические, Плиты газовые, Плиты комбинированные, Настольные газовые плиты, Настольные электрические плиты, Мини-печи, Холодильники, Холодильные витрины, Морозильные шкафы, Морозильные лари, Винные шкафы, Холодильники автомобильные, Ледогенераторы, Посудомоечные машины, Электрочайники, Термопоты, Кофемолки, Самовары электрические, Смартфоны, Смарт-часы и браслеты, Телевизоры, Кронштейны для телевизоров."
    result = model.run(categories_prompt)
    text_result = result.alternatives[0].text if hasattr(result, 'alternatives') else ""

    category_keywords_map = {
        "Процессоры": ["процессор", "cpu"],
        "Материнские платы": ["материнская плата", "материнка", "motherboard"],
        "Видеокарты": ["видеокарта", "gpu"],
        "Оперативная память DIMM": ["dimm", "оперативная память dimm"],
        "Оперативная память SO-DIMM": ["so-dimm", "оперативная память so-dimm"],
        "Корпуса": ["корпус", "case"],
        "Блоки питания": ["блок питания", "power supply"],
        "Кулеры для процессоров": ["кулер", "cooler", "кулеры для процессоров"],
        "Системы жидкостного охлаждения": ["жидкостное охлаждение", "water cooling"],
        "Вентиляторы для корпуса": ["вентилятор", "вентиляторы", "fans"],
        "Твердотельные накопители SSD": ["ssd", "твердотельный накопитель"],
        "Мониторы": ["монитор"],
        "Лазерные МФУ": ["лазерное мфу"],
        "Струйные МФУ": ["струйное мфу"],
        "Лазерные принтеры": ["лазерный принтер"],
        "Струйные принтеры": ["струйный принтер"],
        "3D принтеры": ["3d принтер"],
        "Стулья": ["стул", "стулья"],
        "Столы": ["стол", "столы"],
        "Проекторы": ["проектор"],
        "Wi-Fi роутеры": ["роутер", "wi-fi"],
        "Электросамокаты": ["электросамокат"],
        "Варочные панели электрические": ["электрическая варочная панель"],
        "Варочные панели индукционные": ["индукционная варочная панель"],
        "Варочные панели газовые": ["газовая варочная панель"],
        "Варочные панели комбинированные": ["комбинированная варочная панель"],
        "Духовые шкафы электрические": ["электрический духовой шкаф"],
        "Духовые шкафы газовые": ["газовый духовой шкаф"],
        "Вытяжки": ["вытяжка"],
        "Полновстраиваемые вытяжки": ["полновстраиваемая вытяжка"],
        "Телескопические вытяжки": ["телескопическая вытяжка"],
        "Каминные вытяжки": ["каминная вытяжка"],
        "Наклонные вытяжки": ["наклонная вытяжка"],
        "Подвесные вытяжки": ["подвесная вытяжка"],
        "Встраиваемые микроволновые печи": ["встраиваемая микроволновая печь"],
        "Встраиваемые холодильники": ["встраиваемый холодильник"],
        "Встраиваемые морозильные шкафы": ["встраиваемый морозильный шкаф"],
        "Встраиваемые посудомоечные машины": ["встраиваемая посудомоечная машина"],
        "Встраиваемые стиральные машины": ["встраиваемая стиральная машина"],
        "Встраиваемые винные шкафы": ["встраиваемый винный шкаф"],
        "Встраиваемые кофемашины": ["встраиваемая кофемашина"],
        "Встраиваемые пароварки": ["встраиваемая пароварка"],
        "Встраиваемые вакуумизаторы": ["встраиваемый вакуумизатор"],
        "Плиты электрические": ["электрическая плита"],
        "Плиты газовые": ["газовая плита"],
        "Плиты комбинированные": ["комбинированная плита"],
        "Настольные газовые плиты": ["настольная газовая плита"],
        "Настольные электрические плиты": ["настольная электрическая плита"],
        "Мини-печи": ["мини-печь"],
        "Холодильники": ["холодильник"],
        "Холодильные витрины": ["холодильная витрина"],
        "Морозильные шкафы": ["морозильный шкаф"],
        "Морозильные лари": ["морозильный ларь"],
        "Винные шкафы": ["винный шкаф"],
        "Холодильники автомобильные": ["автомобильный холодильник"],
        "Ледогенераторы": ["ледогенератор"],
        "Посудомоечные машины": ["посудомоечная машина"],
        "Электрочайники": ["электрочайник"],
        "Термопоты": ["термопот"],
        "Кофемолки": ["кофемолка"],
        "Самовары электрические": ["электрический самовар"],
        "Смартфоны": ["смартфон"],
        "Смарт-часы и браслеты": ["смарт-часы", "браслеты"],
        "Телевизоры": ["телевизор"],
        "Кронштейны для телевизоров": ["кронштейн для телевизора"],
    }


    matching_categories = get_matching_categories(text_result, category_keywords_map)

    conn = get_db_connection()
    cursor = conn.cursor()

    final_products = []
    for category in matching_categories:
        query_db = """
            SELECT id, product_name, price, description, image_url, product_url, category
            FROM products
            WHERE 
                category = %s OR
                subcategory1 = %s OR
                subcategory2 = %s OR
                subcategory3 = %s OR
                subcategory4 = %s OR
                subcategory5 = %s
            LIMIT 10;
        """
        cursor.execute(query_db, (category, category, category, category, category, category))
        products = cursor.fetchall()

        for product in products:
            explanation_prompt = f"Почему этот товар подходит в качестве подарка? Товар: {product[1]}. Описание товара: {product[3]}."
            explanation_result = model.run(explanation_prompt)
            explanation_text = explanation_result.alternatives[0].text if hasattr(explanation_result, 'alternatives') else "Объяснение не найдено."

            final_products.append({
                'id': product[0],
                'name': product[1],
                'price': product[2],
                'description': product[3],
                'image_url': product[4],
                'product_url': product[5],
                'explanation': explanation_text
            })

    cursor.close()
    conn.close()

    return {"products": final_products}, 200


if __name__ == "__main__":
    app.run(debug=True)
